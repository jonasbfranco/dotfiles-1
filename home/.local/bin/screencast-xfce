#!/usr/bin/env sh
################################################################################
#                                                                              #
# screencast-xfce                                                              #
#                                                                              #
# Autor: Lucas Saliés Brum a.k.a. sistematico <lucas@archlinux.com.br>         #
#                                                                              #
# Criado em: 05-12-2019 12:13:25 am                                            #
# Modificado em: 05-12-2019 12:17:26 am                                        #
#                                                                              #
# Este trabalho está licenciado com uma Licença Creative Commons               #
# Atribuição 4.0 Internacional                                                 #
# http://creativecommons.org/licenses/by/4.0/                                  #
#                                                                              #
################################################################################

# uso: sh -c "~/.local/bin/screencast-xfce"

apps=( "xrandr" )

for app in ${apps[@]}
do
    command -v $app >/dev/null 2>&1 || { echo >&2 "O aplicativo $app não está instalado. Abortando."; exit 1; }
done

[ -f ${HOME}/.config/polybar/config ] && cor=$(awk -F# '/secondary/{print $2;exit}' ${HOME}/.config/polybar/config)
preset="superfast" # ultrafast,superfast,veryfast,faster,fast,medium,slow,slower,veryslow,placebo
lixeira="${HOME}/.local/share/Trash"
icone="${HOME}/.local/share/icons/elementary/video-display.png"

resolucao=$(xrandr | grep '*' | awk 'NR==1{print $1}')
audio=$(pacmd list-sinks | grep -A 1 'index: 0' | awk 'NR==2{print $2}' | awk '{print substr($0,2,length($0)-2)}') # list-sources, list-sinks

if [ -f ~/.config/user-dirs.dirs ]; then
    source ~/.config/user-dirs.dirs
    caminho="${XDG_VIDEOS_DIR}/screencast/"
else
    caminho="${HOME}/video/screencast/"
fi

if [ ! $1 ]; then
    data=$(date +%Y-%m-%d_%H-%M-%S)
    arquivo="${caminho}/screencast-${data}.mp4"
    [ ! -d $caminho ] && mkdir -p $caminho
fi

if pgrep -x "ffmpeg" > /dev/null
then
    [ "$(pgrep -x polybar)" ] && [ "$1" == "status" ] && echo "%{F#${cor}}%{F-}" && exit
    if [ ! $1 ]; then
        killall ffmpeg
        notify-send -i $icone "ScreenCast" "Vídeo terminado."
        exit 0
    fi
else
    [ "$(pgrep -x polybar)" ] && [ "$1" == "status" ] && echo "%{F#${cor}}%{F-}" && exit
    if [ ! "$1" ]; then
        notify-send -i $icone "ScreenCast" "Vídeo iniciado..."
        ffmpeg -async 1 -f x11grab -s $resolucao -i :0 -f pulse -ac 2 -i default -c:v libx264 -crf 23 -profile:v baseline -level 3.0 -pix_fmt yuv420p -c:a aac -ac 2 -strict experimental -b:a 128k -movflags faststart $arquivo
    elif [ "$1" == "clear" ]; then
        icone="${HOME}/.local/share/icons/elementary/user-trash.png"
        if ls ${caminho}* 2> /dev/null; then
            mv ${caminho}* ${lixeira}/files/
            export DISPLAY=:0 ; canberra-gtk-play -i trash-empty 2>&1
            dbus-launch notify-send -i $icone "ScreenCast" "Pasta de screencasts limpa!"
        else
            export DISPLAY=:0 ; canberra-gtk-play -i trash-empty 2>&1
            dbus-launch notify-send -i $icone "ScreenCast" "Pasta de screencasts já está limpa!"
        fi
        exit 0
    fi
fi

if [ -f $arquivo ]; then
    xclip -selection c -t 'video/mp4' -i $arquivo
fi

exit 0
